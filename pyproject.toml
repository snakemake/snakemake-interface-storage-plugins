[project]
name = "snakemake-interface-storage-plugins"
version = "4.2.0"
description = "This package provides a stable interface for interactions between Snakemake and its storage plugins."
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
  "snakemake-interface-common>=1.12.0",
  "wrapt>=1.15.0",
  "reretry>=0.11.8",
  "throttler>=1.2.2"
]

[[project.authors]]
name = "Johannes Koester"
email = "johannes.koester@uni-due.de"

[project.urls]
homepage = "https://github.com/snakemake/snakemake-interface-storage-plugins"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["osx-arm64", "linux-64"]


[tool.pixi.tasks]

[tool.pixi.dependencies]
python = ">=3.11"

[tool.pixi.environments]
dev = { features = ["dev"] }
publish = { features = ["publish"] }

[tool.pixi.feature.dev.dependencies]
pytest = ">=8.3.5,<9"
ruff = ">=0.10.0,<0.11"
mypy = ">=1.15.0,<2"
pytest-cov = ">=6.0.0,<7"

[tool.pixi.feature.dev.pypi-dependencies]
snakemake-interface-storage-plugins = { path = ".", editable = true }
snakemake-interface-common = { git = "https://github.com/snakemake/snakemake-interface-common.git" }
snakemake-storage-plugin-http = { git = "https://github.com/snakemake/snakemake-storage-plugin-http.git" }
snakemake = { git = "https://github.com/snakemake/snakemake.git" }

[tool.mypy]
ignore_missing_imports = true # Temporary until https://github.com/snakemake/snakemake-interface-common/pull/59 is merged
disallow_untyped_defs = true
warn_no_return = true

[[tool.mypy.overrides]]
# TODO:: figure out expected types for the TestRegistryBase class
module = "snakemake_interface_storage_plugins.tests"
ignore_errors = true

[tool.pixi.feature.dev.tasks]
format = "ruff format snakemake_interface_storage_plugins"
lint = "ruff check"
type-check = "mypy snakemake_interface_storage_plugins/"
qc = { depends-on = ["format", "lint", "type-check"] }

[tool.pixi.feature.dev.tasks.test]
cmd = [
  "pytest",
  "--cov=snakemake_interface_storage_plugins",
  "--cov-report=xml:coverage-report/coverage.xml",
  "--cov-report=term-missing",
  "tests/tests.py"
]

# Publish
[tool.pixi.feature.publish.dependencies]
twine = ">=6.1.0,<7"
python-build = ">=1.2.2,<2"

[tool.pixi.feature.publish.tasks]
build = { cmd = "python -m build", description = "Build the package into the dist/ directory" }
check-build = { cmd = "python -m twine check dist/*", depends-on = [
  "build",
], description = "Check that the package can be uploaded" }
